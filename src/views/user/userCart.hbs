<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Shopping Cart</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>

<body>
    <div class="container d-flex justify-content-between mt-4">
        <div class="col-lg-2 col-md-4">
            <a href="/user/allItems/{{vendorid}}" class="btn btn-primary btn-lg btn-block mb-3">Back</a>
        </div>
        <div class="col-lg-2 col-md-4">
            <a href="/user/cart" class="btn btn-primary btn-lg btn-block mb-3">Go To Cart</a>
        </div>
        <div class="col-lg-2 col-md-4">
            <a href="/user/logout" class="btn btn-primary btn-lg btn-block mb-3">Logout</a>
        </div>
    </div>


    <div class="container mt-3 ">

        <h1 class="text-center">Cart Items of Vendor: {{vendorname}}</h1>


        <div class="row text-center justify-content-center my-5">
            <div class="col-md-4">
                <div class="card">
                    <img src="{{items.img}}" class="card-img-top" alt="{{items.itemname}}">
                    <div class="card-body">
                        <h5 class="card-title" id="productName">{{items.itemname}}</h5>
                        <p class="card-text" id="productPrice">Price: ₹{{items.price}}</p>
                        <select class="form-select quantity-dropdown" id="quantity">
                            <option value="1">1</option>
                        </select>
                        <input class="form-control my-2 text-center bid-input" id="bidInput" type="number"
                            placeholder="Bid: ₹{{items.price}}" aria-label="default input example">
                        <button id="add-to-cart-btn" class="btn btn-primary add-to-cart" data-itemid="{{items._id}}"
                            data-vendorid="{{vendorid}}" data-userid="{{userid}}">Add to Cart</button>

                    </div>
                    <small class="card-title " id="itemid">{{items._id}}</small>
                </div>

                {{#if vendorid}}
                <div class="invisible">
                    <small class="container">vendor:</small>
                    <small class="container" id="vendorid">{{vendorid}}</small>
                </div>
                {{/if}}
                {{#if userid}}
                <div class="invisible">
                    <small class="container">user:</small>
                    <small class="container" id="userid">{{userid}}</small>
                </div>
                {{/if}}
            </div>
        </div>
    </div>


    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.3/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <!-- Add Axios library -->
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#add-to-cart-btn').click(async function () {
                const productName = $('#productName').text();
                const productPrice = parseFloat($('#productPrice').text().replace("Price: ₹", ""));
                const quantity = parseInt($('#quantity').val());
                const totalPrice = productPrice * quantity;
                const itemid = $('#itemid').text();
                const userid = $('#userid').text();
                const vendorid = $('#vendorid').text();

                // Extract bid from input field
                const bidInput = $('#bidInput');
                let bidAmount = bidInput.val().trim(); // Get the trimmed value

                // Check if bidAmount is a valid number, if not, set it to totalPrice
                if (isNaN(parseFloat(bidAmount))) {
                    bidAmount = totalPrice;
                } else {
                    bidAmount = parseFloat(bidAmount);
                }

                // Create cart item object
                const cartItem = {
                    name: productName,
                    price: productPrice,
                    quantity: quantity,
                    total: totalPrice,
                    itemid: itemid,
                    vendorid: vendorid,
                    userid: userid, // Add userid to cart item
                    bidAmt: bidAmount // Add bid amount to cart item
                };

                // POST cart item to the API endpoint using Axios
                try {
                    const response = await axios.post('http://127.0.0.1:3000/user/userAddtoCart', cartItem, {
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    });
                    if (!response.data) {
                        throw new Error('Network response was not ok');
                    }
                    // Refresh the page after successful submission
                    location.reload();
                } catch (error) {
                    console.error('There was a problem with your Axios request:', error);
                }
            });
        });

    </script>

</body>

</html>