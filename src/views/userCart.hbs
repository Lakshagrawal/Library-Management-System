<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Shopping Cart</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>

<body>
    <div class="container d-flex justify-content-between mt-4">
        <div class="col-lg-2 col-md-4">
            <a href="/user" class="btn btn-primary btn-lg btn-block mb-3">Back</a>
        </div>
        <div class="col-lg-2 col-md-4">
            <a href="/user/logout" class="btn btn-primary btn-lg btn-block mb-3">Logout</a>
        </div>
    </div>

    <div class="container ">

        <h1 class="text-center">All Cart Items of Vendor: {{vendorname}}</h1>


        <div class="row text-center">
            <div class="col-md-4">
                {{#each items}}
                <div class="card">
                    <img src="{{this.img}}" class="card-img-top" alt="{{this.itemname}}">
                    <div class="card-body">
                        <h5 class="card-title">{{this.itemname}}</h5>
                        <p class="card-text">Price: ${{this.price}}</p>
                        <select class="form-select quantity-dropdown">
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <!-- Add options for quantity up to 9 -->
                            <!-- Adjust the maximum quantity as per your requirement -->
                            <!-- For demonstration purposes, I'm adding options up to 9 -->
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>
                            <option value="7">7</option>
                            <option value="8">8</option>
                            <option value="9">9</option>
                        </select>
                        <p class="total-price">Total: ${{this.price}}</p>
                        <button class="btn btn-primary add-to-cart">Add to Cart</button>
                    </div>
                    <small class="card-title" id="itemid">item: {{this._id}}</small>
                </div>
                {{/each}}
                {{#if vendorid}}
                    <small class="container">vendor:</small>
                    <small class="container" id="vendorid">{{vendorid}}</small>
                {{/if}}
            </div>
        </div>
    </div>

    <div class="container mt-4">
        {{!-- <h2 class="text-center">Cart</h2> --}}
        <div class="row justify-content-center">
            <div class="col-md-6">
                <div class="card flex mx-2">
                    <div class="card-body text-center">
                        <div class="cart-items my-2">
                            <div class="d-flex flex-column cart-items mx-2">
                                <!-- Cart items will be dynamically added here -->
                            </div>
                        </div>
                        <strong>
                            <p class="cart-total text-center mt-3 ">Total: $0.00</p>
                        </strong>
                    </div>
                </div>
            </div>
        </div>


        {{#if Checkout}}
        <div class="container d-flex flex-column my-4">
            <a href="/user/usertransection" class="btn btn-primary text-center">Proceed to Checkout</a>
        </div>
        {{/if}}
    </div>





    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.3/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script>
        let vendorid = document.getElementById("vendorid").textContent;
        const quantityDropdowns = document.querySelectorAll('.quantity-dropdown');
        quantityDropdowns.forEach(dropdown => {
            dropdown.addEventListener('change', function () {
                // Get selected quantity
                const selectedQuantity = parseInt(dropdown.value);
                // Get price of the product
                const priceElement = dropdown.parentElement.querySelector('.card-text');
                const price = parseFloat(priceElement.textContent.replace('Price: $', ''));
                // Calculate total price
                const totalPrice = selectedQuantity * price;
                // Update total price in the UI
                const totalPriceElement = dropdown.parentElement.querySelector('.total-price');
                totalPriceElement.textContent = `Total: $${totalPrice.toFixed(2)}`;
            });
        });
        document.addEventListener("DOMContentLoaded", function () {
            const addToCartButtons = document.querySelectorAll(".add-to-cart");

            addToCartButtons.forEach(button => {
                button.addEventListener("click", function () {
                    const product = button.parentElement.parentElement;
                    const productName = product.querySelector(".card-title").textContent;
                    const productPrice = parseFloat(product.querySelector(".card-text").textContent.replace("Price: $", ""));
                    const quantity = parseInt(product.querySelector(".quantity-dropdown").value);
                    const totalPrice = productPrice * quantity;
                    const itemid = document.getElementById("itemid").textContent;
                    // Create cart item object
                    const cartItem = {
                        name: productName,
                        price: productPrice,
                        quantity: quantity,
                        total: totalPrice,
                        id: itemid,
                        vendorid: vendorid,
                    };

                    // Retrieve existing cart items from localStorage
                    let cartItems = JSON.parse(localStorage.getItem("cartItems")) || [];

                    // Add the new item to the cart
                    cartItems.push(cartItem);

                    // Store the updated cart items back to localStorage
                    localStorage.setItem("cartItems", JSON.stringify(cartItems));

                    // Refresh the page to reflect the changes in the cart
                    location.reload();
                });
            });
        });

        document.addEventListener("DOMContentLoaded", function () {
            // Retrieve cart items from localStorage
            let cartItems = JSON.parse(localStorage.getItem("cartItems")) || [];

            // Get the cart items container element
            const cartItemsContainer = document.querySelector(".cart-items");
            // Iterate over the retrieved cart items and render them on the page
            cartItems.forEach(item => {
                const cartItem = document.createElement("div");
                cartItem.classList.add("cart-item");
                cartItem.classList.add("mx-2");
                cartItem.innerHTML = `
                <p>${item.name}</p>
                <p>Quantity: ${item.quantity}</p>
                <p>Total: $${item.total.toFixed(2)}</p>
                <button class="btn btn-danger remove-from-cart">Remove</button>
                <hr>

            `;
                cartItemsContainer.appendChild(cartItem);
            });

            // Calculate and display the total price of all items in the cart
            const cartTotal = document.querySelector(".cart-total");
            const totalAmount = cartItems.reduce((total, item) => total + item.total, 0);
            cartTotal.textContent = `Total: $${totalAmount.toFixed(2)}`;

            // Add event listener to remove item from the cart
            cartItemsContainer.addEventListener("click", function (event) {
                if (event.target.classList.contains("remove-from-cart")) {
                    const itemToRemove = event.target.parentElement;
                    const priceToRemove = parseFloat(itemToRemove.querySelector("p:nth-child(3)").textContent.replace("Total: $", ""));
                    const updatedCartItems = cartItems.filter(item => item.total !== priceToRemove);
                    localStorage.setItem("cartItems", JSON.stringify(updatedCartItems));
                    itemToRemove.remove();

                    // Recalculate and display the total price after removing an item
                    const newTotalAmount = updatedCartItems.reduce((total, item) => total + item.total, 0);
                    cartTotal.textContent = `Total: $${newTotalAmount.toFixed(2)}`;
                }
            });
        });

    </script>


</body>

</html>